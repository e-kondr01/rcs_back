version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: rcs_back_production_django
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs/gunicorn:/app/logs/gunicorn
      - ./rcs_back/media:/app/rcs_back/media
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    expose: 
      - 8000


  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: rcs_back_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres
    
  nginx:
    build: ./compose/production/nginx
    ports:
      - "80:80"
      - "443:443"
      - "5555:5555"
    volumes:
      - ./logs/nginx:/etc/nginx/logs
    depends_on:
      - django

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: rcs_back_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: rcs_back_production_celerybeat
    command: /start-celerybeat
    volumes:
      - ./logs/celery:/app/logs/celery

  flower:
    <<: *django
    image: rcs_back_production_flower
    command: /start-flower
    expose:
      - 5555
